<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxFormBuilder - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 José Antonio Hurtado

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Written by
  José Antonio Hurtado - joseantonio.hurtado@gmail.com
  Juan Antonio Ortega  - jortegalalmolda@gmail.com

Python code generation writen by
  Michal Bližňák - michal.bliznak@gmail.com
-->
<codegen language="nit">

  <templates class="wxTopLevelWindow">
    <template name="evt_connect_OnActivate">    bind(this.EVT.ACTIVATE, this, #handler)</template>
    <template name="evt_connect_OnActivateApp"> bind(wx.App.EVT.ACTIVATE_APP, this, #handler)</template>
    <template name="evt_connect_OnClose">       bind(this.EVT.CLOSE, this, #handler)</template>
    <template name="evt_connect_OnHibernate">   bind(wx.App.EVT.HIBERNATE, this, #handler)</template>
    <template name="evt_connect_OnIconize">     bind(this.EVT.ICONIZE, this, #handler)</template>
    <template name="evt_connect_OnIdle">        bind(wx.App.EVT.IDLE, this, #handler)</template>
  </templates>

  <templates class="AUI Events">
    <template name="evt_connect_OnAuiPaneButton">   bind(_auiMgr.EVT.PANE_BUTTON, this, #handler)</template>
    <template name="evt_connect_OnAuiPaneClose">    bind(_auiMgr.EVT.PANE_CLOSE, this, #handler)</template>
    <template name="evt_connect_OnAuiPaneMaximize"> bind(_auiMgr.EVT.PANE_MAXIMIZE, this, #handler)</template>
    <template name="evt_connect_OnAuiPaneRestore">  bind(_auiMgr.EVT.PANE_RESTORE, this, #handler)</template>
    <template name="evt_connect_OnAuiRender">       bind(_auiMgr.EVT.RENDER, this, #handler)</template>
    <template name="evt_connect_OnAuiFindManager">  bind(_auiMgr.EVT.FIND_MANAGER, this, #handler)</template>
  </templates>

  <templates class="Frame">
    <!-- The duplication of these templates is not ideal, but the ripup is too big to be done before version 3 -->
    <template name="base">
      #ifnotnull $subclass/name
      @{ $subclass/name @}

      #ifnull $subclass/name
      @{ wx.ScriptFrame @}
    </template>
    <template name="cons_def">
      constructor(parent=null, id=$id, pack=script.locator)
    </template>
    <template name="cons_call">
      base.constructor(parent, id, $title, $pos, $size, $style #ifnotnull $window_style @{ | $window_style @} #ifnotnull $window_name @{, $window_name @})
    </template>
    <template name="destruction">
      #ifequal $aui_managed "1"
      @{ _auiMgr.unInit() #nl @}
    </template>
    <template name="declaration">
      #ifequal $aui_managed "1"
      @{ var _auiMgr : wx.AuiManager @}
    </template>>
    <template name="settings">
      setSizeHints($minimum_size, $maximum_size) #nl

      #ifnotnull $window_extra_style
      @{ extraStyle = $window_extra_style #nl @}

      #ifnotnull $extra_style
      @{ extraStyle = $extra_style #nl @}

      #ifnotnull $font
      @{ font = $font #nl @}

      #ifnotnull $fg
      @{ foreColor = $fg #nl @}

      #ifnotnull $bg
      @{ backColor = $bg #nl @}

      #ifequal $enabled "0"
      @{ enabled = $enabled #nl @}

      #ifequal $hidden "1"
      @{ hide() #nl @}

      #ifnotnull $tooltip
      @{ toolTip = $tooltip #nl @}

      #ifequal $aui_managed "1"
      @{
        #nl
        _auiMgr = wx.AuiManager(this, $aui_manager_style) #nl
      @}
    </template>
    <template name="after_addchild">
      #ifequal $aui_managed "1"
      @{ #nl _auiMgr.update() @}
      #ifnotnull $center
      @{ #nl center($center) @}
    </template>
    <template name="evt_connect_OnChar">            bind(this.EVT.CHAR, this, #handler)</template>
    <template name="evt_connect_OnEnterWindow">     bind(wx.EVT.MOUSE_ENTER, this, #handler)</template>
    <template name="evt_connect_OnEraseBackground"> bind(this.EVT.ERASE_BACKGROUND, this, #handler)</template>
    <template name="evt_connect_OnKeyDown">         bind(this.EVT.KEY_DOWN, this, #handler)</template>
    <template name="evt_connect_OnKeyUp">           bind(this.EVT.KEY_UP, this, #handler)</template>
    <template name="evt_connect_OnKillFocus">       bind(this.EVT.KILL_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnLeaveWindow">     bind(wx.EVT.MOUSE_LEAVE, this, #handler)</template>
    <template name="evt_connect_OnLeftDClick">      bind(wx.EVT.MOUSE_LEFT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnLeftDown">        bind(wx.EVT.MOUSE_LEFT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnLeftUp">          bind(wx.EVT.MOUSE_LEFT_UP, this, #handler)</template>
    <template name="evt_connect_OnMiddleDClick">    bind(wx.EVT.MOUSE_MIDDLE_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnMiddleDown">      bind(wx.EVT.MOUSE_MIDDLE_DOWN, this, #handler)</template>
    <template name="evt_connect_OnMiddleUp">        bind(wx.EVT.MOUSE_MIDDLE_UP, this, #handler)</template>
    <template name="evt_connect_OnMotion">          bind(wx.EVT.MOUSE_MOTION, this, #handler)</template>
    <template name="evt_connect_OnMouseWheel">      bind(wx.EVT.MOUSE_WHEEL, this, #handler)</template>
    <template name="evt_connect_OnPaint">           bind(wx.EVT.PAINT, this, #handler)</template>
    <template name="evt_connect_OnRightDClick">     bind(wx.EVT.MOUSE_RIGHT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnRightDown">       bind(wx.EVT.MOUSE_RIGHT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnRightUp">         bind(wx.EVT,MOUSE_RIGHT_UP, this, #handler)</template>
    <template name="evt_connect_OnSetFocus">        bind(this.EVT.SET_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnSize">            bind(this.EVT.SIZE, this, #handler)</template>
    <template name="evt_connect_OnUpdateUI">        bind(this.EVT.UPDATE_UI, this, #handler)</template>
  </templates>

  <templates class="Panel">
    <!-- The duplication of these templates is not ideal, but the ripup is too big to be done before version 3 -->
    <template name="base">
      #ifnotnull $subclass/name
      @{ $subclass/name @}

      #ifnull $subclass/name
      @{ wx.ScriptPanel @}
    </template>
    <template name="cons_def">
      constructor(parent=null, id=$id, pack=script.locator)
    </template>
    <template name="cons_call">
      base.constructor(parent, id, $pos, $size, $window_style #ifnotnull $window_name @{, $window_name @})
    </template>
    <template name="destruction">
      #ifequal $aui_managed "1"
      @{ _auiMgr.unInit() #nl @}
    </template>
    <template name="declaration">
      #ifequal $aui_managed "1"
      @{ var _auiMgr : wx.AuiManager @}
    </template>>
    <template name="settings">
      #ifnotnull $window_extra_style
      @{ extraStyle = $window_extra_style #nl @}

      #ifnotnull $font
      @{ font = $font #nl @}

      #ifnotnull $fg
      @{ foreColor = $fg #nl @}

      #ifnotnull $bg
      @{ backColor = $bg #nl @}

      #ifequal $enabled "0"
      @{ enabled = $enabled #nl @}

      #ifequal $hidden "1"
      @{ hide() #nl @}

      #ifnotnull $tooltip
      @{ toolTip = $tooltip #nl @}

      #ifnotnull $minimum_size
      @{ minSize = $minimum_size #nl @}

      #ifnotnull $maximum_size
      @{ maxSize = $maximum_size #nl @}

      #ifequal $aui_managed "1"
      @{
        #nl
        _auiMgr = wx.AuiManager(this, $aui_manager_style) #nl
      @}
    </template>
    <template name="after_addchild">
      #ifequal $aui_managed "1"
      @{ #nl _auiMgr.Update() @}
    </template>
    <template name="evt_connect_OnInitDialog">      bind(this.EVT.INIT_DIALOG, this, #handler)</template>
    <template name="evt_connect_OnChar">            bind(this.EVT.EVT_CHAR, this, #handler)</template>
    <template name="evt_connect_OnEnterWindow">     bind(wx.EVT.MOUSE_ENTER, this, #handler)</template>
    <template name="evt_connect_OnEraseBackground"> bind(this.EVT.ERASE_BACKGROUND, this, #handler)</template>
    <template name="evt_connect_OnKeyDown">         bind(this.EVT.KEY_DOWN, this, #handler)</template>
    <template name="evt_connect_OnKeyUp">           bind(this.EVT.KEY_UP, this, #handler)</template>
    <template name="evt_connect_OnKillFocus">       bind(this.EVT.KILL_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnLeaveWindow">     bind(wx.EVT.MOUSE_LEAVE, this, #handler)</template>
    <template name="evt_connect_OnLeftDClick">      bind(wx.EVT.MOUSE_LEFT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnLeftDown">        bind(wx.EVT.MOUSE_LEFT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnLeftUp">          bind(wx.EVT.MOUSE_LEFT_UP, this, #handler)</template>
    <template name="evt_connect_OnMiddleDClick">    bind(wx.EVT.MOUSE_MIDDLE_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnMiddleDown">      bind(wx.EVT.MOUSE_MIDDLE_DOWN, this, #handler)</template>
    <template name="evt_connect_OnMiddleUp">        bind(wx.EVT.MOUSE_MIDDLE_UP, this, #handler)</template>
    <template name="evt_connect_OnMotion">          bind(wx.EVT.MOUSE_MOTION, this, #handler)</template>
    <template name="evt_connect_OnMouseWheel">      bind(wx.EVT.MOUSE_WHEEL, this, #handler)</template>
    <template name="evt_connect_OnPaint">           bind(this.EVT.PAINT, this, #handler)</template>
    <template name="evt_connect_OnRightDClick">     bind(wx.EVT.MOUSE_RIGHT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnRightDown">       bind(wx.EVT.MOUSE_RIGHT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnRightUp">         bind(wx.EVT.MOUSE_RIGHT_UP, this, #handler)</template>
    <template name="evt_connect_OnSetFocus">        bind(this.EVT.SET_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnSize">            bind(this.EVT.SIZE, this, #handler)</template>
    <template name="evt_connect_OnUpdateUI">        bind(this.EVT.UPDATE_UI, this, #handler)</template>
  </templates>


  <templates class="Dialog">
    <!-- The duplication of these templates is not ideal, but the ripup is too big to be done before version 3 -->
    <template name="base">
      #ifnotnull $subclass/name
      @{ $subclass/name @}

      #ifnull $subclass/name
      @{ wx.ScriptDialog @}
    </template>
    <template name="cons_def">
      constructor(parent=null, id=$id, pack=script.locator)
    </template>
    <template name="cons_call">
      base.constructor(parent, id, $title, $pos, $size, $style #ifnotnull $window_style @{ | $window_style @} #ifnotnull $window_name @{, $window_name @})
    </template>
    <template name="destruction">
      #ifequal $aui_managed "1"
      @{ _auiMgr.UnInit() #nl @}
    </template>
    <template name="declaration">
      #ifequal $aui_managed "1"
      @{ var _auiMgr : wx.AuiManager @}
    </template>>
    <template name="settings">
      setSizeHints($minimum_size, $maximum_size) #nl

      #ifnotnull $window_extra_style
      @{ extraStyle = $window_extra_style #nl @}

      #ifnotnull $extra_style
      @{ extraStyle = $extra_style #nl @}
      
      #ifnotnull $font
      @{ font = $font #nl @}

      #ifnotnull $fg
      @{ foreColor = $fg #nl @}

      #ifnotnull $bg
      @{ backColor = $bg #nl @}

      #ifequal $enabled "0"
      @{ enabled = $enabled #nl @}

      #ifequal $hidden "1"
      @{ hide() #nl @}

      #ifnotnull $tooltip
      @{ toolTip = $tooltip #nl @}

      #ifequal $aui_managed "1"
      @{
        #nl
        _auiMgr = wx.AuiManager(this, $aui_manager_style) #nl
      @}
    </template>
    <template name="after_addchild">
      #ifequal $aui_managed "1"
      @{ #nl _auiMgr.update() @}
      #ifnotnull $center
      @{ #nl center($center) @}
    </template>
    <template name="evt_connect_OnInitDialog">      bind(this.EVT.INIT_DIALOG, this, #handler)</template>
    <template name="evt_connect_OnChar">            bind(this.EVT.CHAR, this, #handler)</template>
    <template name="evt_connect_OnEnterWindow">     bind(wx.EVT.MOUSE_ENTER, this, #handler)</template>
    <template name="evt_connect_OnEraseBackground"> bind(this.EVT.ERASE_BACKGROUND, this, #handler)</template>
    <template name="evt_connect_OnKeyDown">         bind(this.EVT.KEY_DOWN, this, #handler)</template>
    <template name="evt_connect_OnKeyUp">           bind(this.EVT.KEY_UP, this, #handler)</template>
    <template name="evt_connect_OnKillFocus">       bind(this.EVT.KILL_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnLeaveWindow">     bind(wx.EVT.MOUSE_LEAVE, this, #handler)</template>
    <template name="evt_connect_OnLeftDClick">      bind(wx.EVT.MOUSE_LEFT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnLeftDown">        bind(wx.EVT.MOUSE_LEFT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnLeftUp">          bind(wx.EVT.MOUSE_LEFT_UP, this, #handler)</template>
    <template name="evt_connect_OnMiddleDClick">    bind(wx.EVT.MOUSE_MIDDLE_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnMiddleDown">      bind(wx.EVT.MOUSE_MIDDLE_DOWN, this, #handler)</template>
    <template name="evt_connect_OnMiddleUp">        bind(wx.EVT.MOUSE_MIDDLE_UP, this, #handler)</template>
    <template name="evt_connect_OnMotion">          bind(wx.EVT.MOUSE_MOTION, this, #handler)</template>
    <template name="evt_connect_OnMouseWheel">      bind(wx.EVT.MOUSE_WHEEL, this, #handler)</template>
    <template name="evt_connect_OnPaint">           bind(this.EVT.PAINT, this, #handler)</template>
    <template name="evt_connect_OnRightDClick">     bind(wx.EVT.MOUSE_RIGHT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnRightDown">       bind(wx.EVT.MOUSE_RIGHT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnRightUp">         bind(wx.EVT.MOUSE_RIGHT_UP, this, #handler)</template>
    <template name="evt_connect_OnSetFocus">        bind(this.EVT.SET_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnSize">            bind(this.EVT.SIZE, this, #handler)</template>
    <template name="evt_connect_OnUpdateUI">        bind(this.EVT.UPDATE_UI, this, #handler)</template>
  </templates>

  <templates class="Wizard">
    <!-- The duplication of these templates is not ideal, but the ripup is too big to be done before version 3 -->
    <template name="base">
      #ifnotnull $subclass/name
      @{ $subclass/name @}

      #ifnull $subclass/name
      @{ wx.ScriptWizard @}
    </template>
    <template name="declaration">
      var _pages : array&lt;wx.WizardPageSimple&gt; = []
    </template>
    <template name="cons_def">
      constructor(parent=null, id=$id, pack=script.locator)
    </template>
    <template name="cons_call">
      base.constructor(parent, id, $title, $bitmap, $pos, $size, $style #ifnotnull $window_style @{ | $window_style @} #ifnotnull $window_name @{, $window_name @})
    </template>
    <template name="settings">
      setSizeHints($minimum_size, $maximum_size) #nl

      #ifnotnull $window_extra_style
      @{ extraStyle = $window_extra_style #nl @}

      #ifnotnull $extra_style
      @{ extraStyle = $extra_style #nl @}

      #ifnotnull $font
      @{ font = $font #nl @}

      #ifnotnull $fg
      @{ foreColor = $fg #nl @}

      #ifnotnull $bg
      @{ backColor = $bg #nl @}

      #ifequal $enabled "0"
      @{ enabled = $enabled #nl @}

      #ifequal $hidden "1"
      @{ hide() #nl @}

      #ifnotnull $tooltip
      @{ toolTip = $tooltip #nl @}
    </template>
    <template name="after_addchild">
      #ifnotnull $center
      @{ #nl center($center) @}
    </template>
    <template name="evt_connect_OnInitDialog">          bind(this.EVT.INIT_DIALOG, this, #handler)</template>
    <template name="evt_connect_OnChar">                bind(this.EVT.CHAR, this, #handler)</template>
    <template name="evt_connect_OnEnterWindow">         bind(wx.EVT.MOUSE_ENTER, this, #handler)</template>
    <template name="evt_connect_OnEraseBackground">     bind(this.EVT.ERASE_BACKGROUND, this, #handler)</template>
    <template name="evt_connect_OnKeyDown">             bind(this.EVT.KEY_DOWN, this, #handler)</template>
    <template name="evt_connect_OnKeyUp">               bind(this.EVT.KEY_UP, this, #handler)</template>
    <template name="evt_connect_OnKillFocus">           bind(this.EVT.KILL_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnLeaveWindow">         bind(wx.EVT.MOUSE_LEAVE, this, #handler)</template>
    <template name="evt_connect_OnLeftDClick">          bind(wx.EVT.MOUSE_LEFT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnLeftDown">            bind(wx.EVT.MOUSE_LEFT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnLeftUp">              bind(wx.EVT.MOUSE_LEFT_UP, this, #handler)</template>
    <template name="evt_connect_OnMiddleDClick">        bind(wx.EVT.MOUSE_MIDDLE_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnMiddleDown">          bind(wx.EVT.MOUSE_MIDDLE_DOWN, this, #handler)</template>
    <template name="evt_connect_OnMiddleUp">            bind(wx.EVT.MOUSE_MIDDLE_UP, this, #handler)</template>
    <template name="evt_connect_OnMotion">              bind(wx.EVT.MOUSE_MOTION, this, #handler)</template>
    <template name="evt_connect_OnMouseWheel">          bind(wx.EVT.MOUSE_WHEEL, this, #handler)</template>
    <template name="evt_connect_OnPaint">               bind(this.EVT.PAINT, this, #handler)</template>
    <template name="evt_connect_OnRightDClick">         bind(wx.EVT.MOUSE_RIGHT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnRightDown">           bind(wx.EVT.MOUSE_RIGHT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnRightUp">             bind(wx.EVT.MOUSE_RIGHT_UP, this, #handler)</template>
    <template name="evt_connect_OnSetFocus">            bind(this.EVT.SET_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnSize">                bind(this.EVT.SIZE, this, #handler)</template>
    <template name="evt_connect_OnUpdateUI">            bind(this.EVT.UPDATE_UI, this, #handler)</template>
    <template name="evt_connect_OnWizardPageChanged">   bind(this.EVT.PAGE_CHANGED, this, #handler)</template>
    <template name="evt_connect_OnWizardPageChanging">  bind(this.EVT.PAGE_CHANGING, this, #handler)</template>
    <template name="evt_connect_OnWizardPageShown">     bind(this.EVT.PAGE_SHOWN, this, #handler)</template>
    <template name="evt_connect_OnWizardCancel">        bind(this.EVT.CANCEL, this, #handler)</template>
    <template name="evt_connect_OnWizardHelp">          bind(this.EVT.HELP, this, #handler)</template>
    <template name="evt_connect_OnWizardFinished">      bind(this.EVT.FINISHED, this, #handler)</template>

  </templates>

  <templates class="WizardPageSimple">
    <template name="construction">
      $name = wx.WizardPageSimple(this #ifnotnull $bitmap @{ , null, null, $bitmap @}) #nl
      addPage($name) #nl
    </template>
    <template name="declaration">
      var $name : wx.WizardPageSimple
    </template>
  </templates>

  <templates class="MenuBar">
    <template name="base">
      #ifnotnull $subclass/name
      @{ $subclass/name @}

      #ifnull $subclass/name
      @{ wx.MenuBar @}
    </template>
    <template name="cons_def">
      constructor(parent=null, id=$id, pack=script.locator)
    </template>
    <template name="cons_call">
      base.constructor($style)
    </template>
  </templates>

  <templates class="ToolBar">
    <template name="base">
      #ifnotnull $subclass/name
      @{ $subclass/name @}

      #ifnull $subclass/name
      @{ wx.ToolBar @}
    </template>
    <template name="cons_def">
      constructor(parent=null, id=$id, pack=script.locator)
    </template>
    <template name="cons_call">
      base.constructor(parent, id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @} #ifnotnull $window_name @{, $window_name @})
    </template>
    <template name="settings">
    </template>
    <template name="after_addchild">#nl realize()</template>
  </templates>

</codegen>
