<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>

<codegen language="nit">
  <templates class="Project">
    <template name="nit_preamble">
      $prolog
    </template>
    <template name="include">
    </template>
    <template name="nit_epilogue">
      $epilog
    </template>
  </templates>
  <templates class="wxWindow">
    <template name="settings">
      #ifnotnull $window_extra_style
      @{ $name.extraStyle = $window_extra_style #nl @}

      #ifnotnull $font
      @{ $name.font = $font #nl @}

      #ifnotnull $fg
      @{ $name.foreColor = $fg #nl @}

      #ifnotnull $bg
      @{ $name.backColor = $bg #nl @}

      #ifequal $enabled "0"
      @{ $name.enabled = $enabled #nl @}

      #ifequal $hidden "1"
      @{ $name.hide() #nl @}

      #ifnotnull $tooltip
      @{ $name.toolTip = $tooltip #nl @}

      #ifnotnull $context_help
      @{ $name.helpText = $context_help #nl @}

      #ifnotnull $minimum_size
      @{ $name.minSize = $minimum_size #nl @}

      #ifnotnull $maximum_size
      @{ $name.maxSize = $maximum_size #nl @}

      #ifparenttypeequal "toolbar_form"
      @{ addControl($name) @}
    </template>

    <!-- wxKeyEvent -->
    <template name="evt_connect_OnChar">        $name.bind(wx.EVT.CHAR, this, #handler)</template>
    <template name="evt_connect_OnKeyDown">     $name.bind(wx.EVT.KEY_DOWN, this, #handler)</template>
    <template name="evt_connect_OnKeyUp">       $name.bind(wx.EVT.KEY_UP, this, #handler)</template>

    <!-- wxMouseEvent -->
    <template name="evt_connect_OnEnterWindow"> $name.bind(wx.EVT.MOUSE_ENTER, this, #handler)</template>
    <template name="evt_connect_OnLeaveWindow"> $name.bind(wx.EVT.MOUSE_LEAVE, this, #handler)</template>
    <template name="evt_connect_OnLeftDClick">  $name.bind(wx.EVT.MOUSE_LEFT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnLeftDown">    $name.bind(wx.EVT.MOUSE_LEFT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnLeftUp">      $name.bind(wx.EVT.MOUSE_LEFT_UP, this, #handler)</template>
    <template name="evt_connect_OnMiddleDClick">$name.bind(wx.EVT.MOUSE_MIDDLE_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnMiddleDown">  $name.bind(wx.EVT.MOUSE_MIDDLE_DOWN, this, #handler)</template>
    <template name="evt_connect_OnMiddleUp">    $name.bind(wx.EVT.MOUSE_MIDDLE_UP, this, #handler)</template>
    <template name="evt_connect_OnMotion">      $name.bind(wx.EVT.MOUSE_MOTION, this, #handler)</template>
    <template name="evt_connect_OnMouseWheel">  $name.bind(wx.EVT.MOUSE_WHEEL, this, #handler)</template>
    <template name="evt_connect_OnRightDClick"> $name.bind(wx.EVT.MOUSE_RIGHT_DCLICK, this, #handler)</template>
    <template name="evt_connect_OnRightDown">   $name.bind(wx.EVT.MOUSE_RIGHT_DOWN, this, #handler)</template>
    <template name="evt_connect_OnRightUp">     $name.bind(wx.EVT.MOUSE_RIGHT_UP, this, #handler)</template>
    <template name="evt_connect_OnMouseEvents">
      $name.bind(wx.EVT.MOUSE_LEFT_DOWN, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_LEFT_UP, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_MIDDLE_DOWN, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_MIDDLE_UP, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_RIGHT_DOWN, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_RIGHT_UP, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_MOTION, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_LEFT_DCLICK, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_MIDDLE_DCLICK, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_RIGHT_DCLICK, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_LEAVE, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_ENTER, this, #handler) #nl
      $name.bind(wx.EVT.MOUSE_WHEEL, this, #handler)
    </template>

    <!-- wxFocusEvent -->
    <template name="evt_connect_OnKillFocus"> $name.bind(wx.EVT.KILL_FOCUS, this, #handler)</template>
    <template name="evt_connect_OnSetFocus">  $name.bind(wx.EVT.SET_FOCUS, this, #handler)</template>
    .
    <!-- wxPaintEvent -->
    <template name="evt_connect_OnPaint">     $name.bind(wx.EVT.PAINT, this, #handler)</template>

    <!-- wxEraseEvent -->
    <template name="evt_connect_OnEraseBackground">$name.bind(wx.EVT.ERASE_BACKGROUND, this, #handler)</template>

    <!-- wxSizeEvent -->
    <template name="evt_connect_OnSize">      $name.bind(wx.EVT.SIZE, this, #handler)</template>

    <!-- wxUpdateUIEvent -->
    <template name="evt_connect_OnUpdateUI">  $name.bind(wx.EVT.UPDATE_UI, this, #handler)</template>
  </templates>

  <templates class="Validator">
    <template name="include" />
    <template name="valvar_declaration" />
    <template name="settings" />
  </templates>

  <templates class="AUI">
    <template name="settings">
      #ifparenttypeequal "form"
      @{
      #ifequal #parent $aui_managed "1"
      @{
      #iftypenotequal "toolbar"
      @{
      _auiMgr.addPane($name, wx.AuiPaneInfo()
      #ifnotnull $aui_name @{.name($aui_name)@}.#camelize $docking()
      #ifnotnull $caption @{.caption($caption)@}
      #ifequal $caption_visible "0" @{.captionVisible($caption_visible)@}
      #ifequal $close_button "0" @{.closeButton($close_button)@}
      #ifequal $maximize_button "1" @{.maximizeButton($maximize_button)@}
      #ifequal $minimize_button "1" @{.minimizeButton($minimize_button)@}
      #ifequal $pin_button "1" @{.pinButton($pin_button)@}
      #ifequal $pane_border "0" @{.paneBorder($pane_border)@}
      #ifequal $gripper "1" @{.gripper()@}
      #ifequal $show "0" @{.hide()@}
      #ifequal $moveable "0" @{.movable($moveable)@}
      #ifnotnull $dock @{.#camelize $dock()#ifequal $dock "Float" @{.floatingPosition($pane_position)@}@}
      #ifnotnull $resize @{.#camelize $resize()#ifequal $resize "Resizable"	@{.floatingSize($pane_size)@}@}
      #ifequal $dock_fixed "0" @{.dockFixed($dock_fixed)@}
      #ifequal $BottomDockable "0" @{.bottomDockable($BottomDockable)@}
      #ifequal $TopDockable "0" @{.topDockable($TopDockable)@}
      #ifequal $LeftDockable "0" @{.leftDockable($LeftDockable)@}
      #ifequal $RightDockable "0"	@{.rightDockable($RightDockable)@}
      #ifequal $floatable "0"	@{.floatable($floatable)@}
      #ifnotnull $aui_row	@{.row($aui_row)@}
      #ifnotnull $aui_position @{.position($aui_position)@}
      #ifnotnull $best_size @{.bestSize($best_size)@}
      #ifnotnull $min_size @{.minSize($min_size)@}
      #ifnotnull $max_size @{.maxSize($max_size)@}
      #ifnotnull $aui_layer @{.layer($aui_layer)@}
      #ifequal $center_pane "1" @{.centerPane()@}
      #ifequal $default_pane "1" @{.defaultPane()@}
      #ifequal $toolbar_pane "1" @{.toolbarPane()@}
      ) #nl
      @}
      @}
      @}
    </template>
  </templates>

  <templates class="wxTreeCtrlBase">
    <template name="evt_connect_OnTreeBeginDrag">       $name.bind($name.EVT.BEGIN_DRAG, this, #handler)</template>
    <template name="evt_connect_OnTreeBeginRDrag">      $name.bind($name.EVT.BEGIN_RDRAG, this, #handler)</template>
    <template name="evt_connect_OnTreeEndDrag">         $name.bind($name.EVT.END_DRAG, this, #handler)</template>
    <template name="evt_connect_OnTreeBeginLabelEdit">  $name.bind($name.EVT.BEGIN_LABEL_EDIT, this, #handler)</template>
    <template name="evt_connect_OnTreeEndLabelEdit">    $name.bind($name.EVT.END_LABEL_EDIT, this, #handler)</template>
    <template name="evt_connect_OnTreeDeleteItem">      $name.bind($name.EVT.DELETE_ITEM, this, #handler)</template>
    <template name="evt_connect_OnTreeItemActivated">   $name.bind($name.EVT.ITEM_ACTIVATED, this, #handler)</template>
    <template name="evt_connect_OnTreeItemCollapsed">   $name.bind($name.EVT.ITEM_COLLAPSED, this, #handler)</template>
    <template name="evt_connect_OnTreeItemCollapsing">  $name.bind($name.EVT.ITEM_COLLAPSING, this, #handler)</template>
    <template name="evt_connect_OnTreeItemExpanded">    $name.bind($name.EVT.ITEM_EXPANDED, this, #handler)</template>
    <template name="evt_connect_OnTreeItemExpanding">   $name.bind($name.EVT.ITEM_EXPANDING, this, #handler)</template>
    <template name="evt_connect_OnTreeItemRightClick">  $name.bind($name.EVT.ITEM_RIGHT_CLICK, this, #handler)</template>
    <template name="evt_connect_OnTreeItemMiddleClick"> $name.bind($name.EVT.ITEM_MIDDLE_CLICK, this, #handler)</template>
    <template name="evt_connect_OnTreeSelChanged">      $name.bind($name.EVT.SEL_CHANGED, this, #handler)</template>
    <template name="evt_connect_OnTreeSelChanging">     $name.bind($name.EVT.SEL_CHANGING, this, #handler)</template>
    <template name="evt_connect_OnTreeKeyDown">         $name.bind($name.EVT.KEY_DOWN, this, #handler)</template>
    <template name="evt_connect_OnTreeItemMenu">        $name.bind($name.EVT.ITEM_MENU, this, #handler)</template>
  </templates>

  <templates class="UserClasses">
    <template name="file_comment">
      /// Subclass of $basename, which is generated by wxFormBuilder.
    </template>
    <template name="event_handler_comment">
      /// Handlers for $basename events.
    </template>
    <template name="source_include">import wx #nl import $gen_file</template>
    <template name="class_decl">
      /// Implementing $basename #nl
      class $name : $gen_file.$basename
    </template>
    <template name="Frame_cons_def">
      constructor(parent) #indent #nl { 
      base.constructor(parent) #unindent #nl } #nl
    </template>
    <template name="Panel_cons_def">
      constructor(parent) #indent #nl {
      base.constructor(parent) #unindent #nl } #nl
    </template>
    <template name="Dialog_cons_def">
      constructor(parent) #indent #nl {
      base.constructor(parent) #unindent #nl } #nl
    </template>
    <template name="Wizard_cons_def">
      constructor(parent) #indent #nl {
      base.constructor(parent) #unindent #nl } #nl
    </template>
  </templates>
</codegen>
